terraform apply

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_instance.k3s_node will be created
  + resource "aws_instance" "k3s_node" {
      + ami                                  = "ami-084568db4383264d4"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + enable_primary_ipv6                  = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "deployer-key"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "k3s-single-node"
        }
      + tags_all                             = {
          + "Name" = "k3s-single-node"
        }
      + tenancy                              = (known after apply)
      + user_data                            = "cb40361fbdf449931e01b65149806208cba56056"
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification (known after apply)

      + cpu_options (known after apply)

      + ebs_block_device (known after apply)

      + enclave_options (known after apply)

      + ephemeral_block_device (known after apply)

      + instance_market_options (known after apply)

      + maintenance_options (known after apply)

      + metadata_options (known after apply)

      + network_interface (known after apply)

      + private_dns_name_options (known after apply)

      + root_block_device (known after apply)
    }

  # aws_key_pair.deployer will be created
  + resource "aws_key_pair" "deployer" {
      + arn             = (known after apply)
      + fingerprint     = (known after apply)
      + id              = (known after apply)
      + key_name        = "deployer-key"
      + key_name_prefix = (known after apply)
      + key_pair_id     = (known after apply)
      + key_type        = (known after apply)
      + public_key      = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDdZJIeLWOlvRcc99IzU0MkIsmvK9J0ZKy8CD1GB9SOhj3y7nbUXr4rkKv3w3wvpX67ncPtNweskxdWBDuU7O+t5YHytGnZCiBOxTc3tq7cOatYNAc2J3163TDA7Z7M/myRGMhwHKtABkpAuaeXY9EJ5qSrqZyqT69QA3aDyTSIqbJdQXWj/dZLgIWhHC5qF48k3XhvvYvA8IpptwWUoJV/OinAvD5A6iEPcMcdumqafRIGwvSd60b/vnJkAkQJwayaJVh2WGPOU25KqDMFqRF4rnRvlK5v9EWPeOvYfTEk2AcAbtUGuyyc5hJ+SHa2M0n9a7O+bWWPVUiovVjXVc+NNNaRy8/BIlnz4eCQHt+recLV/Ljim8fxTNKGyCVx5rzHMa7RCuGPH4OOL/uEibO/NFk9tyAozJfFSgLU4/Fp6bIk6wHYdYFzFPU5AlPgIzatu4Wat4RBQaUUOA0/I19eAdOjol8kJWCuHnNkhJffo4EOhsG+qbEbcpF2ehVQErU= emiliofl@Emilios-MacBook-Pro.local"
      + tags_all        = (known after apply)
    }

  # aws_security_group.k3s_sg will be created
  + resource "aws_security_group" "k3s_sg" {
      + arn                    = (known after apply)
      + description            = "Allow SSH and Kubernetes ports"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 22
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 22
                # (1 unchanged attribute hidden)
            },
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 6443
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 6443
                # (1 unchanged attribute hidden)
            },
        ]
      + name                   = "k3s_sg"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags_all               = (known after apply)
      + vpc_id                 = (known after apply)
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

aws_key_pair.deployer: Creating...
aws_security_group.k3s_sg: Creating...
aws_key_pair.deployer: Creation complete after 1s [id=deployer-key]
aws_security_group.k3s_sg: Creation complete after 4s [id=sg-0489564dad9cbe175]
aws_instance.k3s_node: Creating...
aws_instance.k3s_node: Still creating... [10s elapsed]
aws_instance.k3s_node: Creation complete after 13s [id=i-0d24d472d355d0802]

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.